@page "/dodajKlijenta"

@using ZiblinWebb.Models
@using ZiblinWebb.Data
@*@using AspNetMonsters.Blazor.Geolocation*@
@*@inject LocationService LocationService*@
@inject NavigationManager NavigationManager



<h1>DODAJ NOVOG KLIJENTA </h1>

<h3> Unesite podatke o klijentu</h3>

<br />

<EditForm Model="@klijent">
    <DataAnnotationsValidator> </DataAnnotationsValidator>

    <div class="form-group row">
        <label for="txtNazivSalona" class="col-sm-2 col-form-label">Naziv salona:</label>
        <div class="col-sm-10">
            <InputText id="txtNazivSalona" class="form-control" @bind-Value="@klijent.NazivSalona"></InputText>
            <ValidationMessage For="@(() => klijent.NazivSalona)"></ValidationMessage>
        </div>
    </div>

    <div class="form-group row">
        <label for="txtVlasnikSalona" class="col-sm-2 col-form-label">Ime i prezime vlasnika:</label>
        <div class="col-sm-10">
            <InputText id="txtVlasnikSalona" class="form-control" @bind-Value="@klijent.Vlasnik"></InputText>
            <ValidationMessage For="@(() => klijent.Vlasnik)"></ValidationMessage>
        </div>
    </div>

    <div class="form-group row">
        <label for="txtAdresa" class="col-sm-2 col-form-label">Adresa salona:</label>
        <div class="col-sm-10">
            <InputText id="txtAdresa" class="form-control" @bind-Value="@klijent.Adresa"></InputText>
            <ValidationMessage For="@(() => klijent.Adresa)"></ValidationMessage>
        </div>
    </div>

    <div class="form-group row">
        <label for="txtMjesto" class="col-sm-2 col-form-label">Mjesto:</label>
        <div class="col-sm-10">
            <InputText id="txtMjesto" class="form-control" @bind-Value="@klijent.Mjesto"></InputText>
            <ValidationMessage For="@(() => klijent.Mjesto)"></ValidationMessage>
        </div>
    </div>

    <div class="form-group row">
        <label for="txtEmail" class="col-sm-2 col-form-label">Email:</label>
        <div class="col-sm-10">
            <InputText id="txtEmail" class="form-control" @bind-Value="@klijent.Email"></InputText>
            <ValidationMessage For="@(() => klijent.Email)"></ValidationMessage>
        </div>
    </div>

    <div class="form-group row">
        <label for="txtTelefon" class="col-sm-2 col-form-label">Telefon:</label>
        <div class="col-sm-10">
            <InputText id="txtTelefon" class="form-control" @bind-Value="@klijent.Telefon"></InputText>
            <ValidationMessage For="@(() => klijent.Telefon)"></ValidationMessage>
        </div>
    </div>

    <div class="form-group row">
        <label for="txtMobitel" class="col-sm-2 col-form-label">Mobitel:</label>
        <div class="col-sm-10">
            <InputText id="txtMobitel" class="form-control" @bind-Value="@klijent.Mobitel"></InputText>
            <ValidationMessage For="@(() => klijent.Mobitel)"></ValidationMessage>
        </div>
    </div>

    <div class="checkbox checkbox-primary" id="@Fb">
        <label><input type="checkbox" @bind-value="Fb" /><b> Facebook</b></label>
    </div>
    <div class="checkbox checkbox-primary" id="@Ig">
        <label><input type="checkbox" @bind-value="Ig" /><b> Instagram</b></label>
    </div>

    <div class="form-group row">
        <button type="submit" class="btn btn-primary" @onclick="DohvatiLokaciju">Dohvati lokaciju</button>
    </div>


    <div class="form-group">
        <button type="submit" class="btn btn-primary" @onclick="Spremi">Spremi</button>
    </div>

</EditForm>




@code {

    private Klijenti klijent;
    private KlijentiService klijentiService = new KlijentiService();

    protected override void OnInitialized()
    {
        klijent = new Klijenti();
    }

    public bool Fb
    {
        get => klijent.Facebook;
        set
        {
            klijent.Facebook = Fb;
        }
    }

    public bool Ig
    {
        get => klijent.Instagram;
        set
        {
            klijent.Instagram = Ig;
        }
    }

    //Location location;

    protected async Task DohvatiLokaciju()
    {
        //location = await LocationService.GetLocationAsync();

        klijent.Latitude = 43.190155; //double.Parse(location.Latitude.ToString());
        klijent.Longitude = 17.547698; //double.Parse(location.Longitude.ToString());

        //klijent.KlijentaDodao = 5;

        klijent.SifraSalona = 12332.ToString();
        klijent.DatumDodavanja = DateTime.Now.Date;
    }


    protected async Task Spremi()
    {
        klijentiService.KreirajKlijenta(klijent);
        NavigationManager.NavigateTo("/sviKlijenti");
    }


}

